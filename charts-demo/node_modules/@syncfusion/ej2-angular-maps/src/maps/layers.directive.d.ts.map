{"version":3,"file":"layers.directive.d.ts","sources":["layers.directive.d.ts"],"names":[],"mappingssourcesContent":["import { ViewContainerRef } from '@angular/core';\nimport { ComplexBase, ArrayBase } from '@syncfusion/ej2-angular-base';\n/**\n * Layer Directive\n * ```html\n * <e-layers>\n * <e-layer></e-layer>\n * </e-layers>\n * ```\n */\nexport declare class LayerDirective extends ComplexBase<LayerDirective> {\n    private viewContainerRef;\n    directivePropList: any;\n    childInitialShapeSelection: any;\n    childMarkerSettings: any;\n    childBubbleSettings: any;\n    childNavigationLineSettings: any;\n    tags: string[];\n    /**\n     * Sets and gets the type of the layer in maps.\n     * @default Layer\n     */\n    type: any;\n    /**\n     * Sets and gets the duration for the animation of layers in maps.\n     * @default 0\n     */\n    animationDuration: any;\n    /**\n     * Sets and gets the Bing map type for the layer. If you use shape data with BingMapType without using layer type as Bing,\n     * then the map will render based on shape data since default layer type will be set as Geometry.\n     * @default Aerial\n     */\n    bingMapType: any;\n    /**\n     * Sets and gets the options for customizing the bubble in maps.\n     */\n    bubbleSettings: any;\n    /**\n     * Sets and gets the options for customizing the data-label in maps.\n     */\n    dataLabelSettings: any;\n    /**\n     * * Sets and gets the data source for the layer.\n     * * The data source can contain data that can be bound to the tooltip, marker, and bubble.\n     * @isobservable true\n     * @default []\n     */\n    dataSource: any;\n    /**\n     * Sets and gets the geometry type for the layer in maps.\n     * @default Geographic\n     */\n    geometryType: any;\n    /**\n     * Sets and gets the options for customizing the shapes when the mouse has hovered on maps.\n     */\n    highlightSettings: any;\n    /**\n     * Sets and gets the settings for shapes that is selected at the time of rendering.\n     */\n    initialShapeSelection: any;\n    /**\n     * Sets and gets the key for the tile map layer in maps.\n     * @default ''\n     */\n    key: any;\n    /**\n     * Sets and gets the type of the layer in maps. If we use layer type with shape data property in layer of the maps\n     * then map will render based on the provided layer type.\n     * @default Geometry\n     */\n    layerType: any;\n    /**\n     * Sets and gets the options for customizing the cluster of markers in maps.\n     */\n    markerClusterSettings: any;\n    /**\n     * Sets and gets the options for customizing the marker in maps.\n     */\n    markerSettings: any;\n    /**\n     * Sets and gets the options for customizing the navigation line in maps.\n     */\n    navigationLineSettings: any;\n    /**\n     * Sets and gets the query to select particular data from the shape data.\n     * This property is applicable only when the data source is created by data manager.\n     * @default null\n     */\n    query: any;\n    /**\n     * Sets and gets the options for customizing the shapes when clicking the shapes in maps.\n     */\n    selectionSettings: any;\n    /**\n     * Sets and gets the shape data for the maps to render.\n     * @isobservable true\n     * @default null\n     */\n    shapeData: any;\n    /**\n     * Sets and gets the path for the shape from the shape data in maps.\n     * @default 'name'\n     */\n    shapeDataPath: any;\n    /**\n     * Sets and gets the path for the layers from the layer data source in maps.\n     * @default 'name'\n     */\n    shapePropertyPath: any;\n    /**\n     * Sets and gets the options to customize the shape of the maps.\n     */\n    shapeSettings: any;\n    /**\n     * Sets and gets the type of the static maps.\n     * @default RoadMap\n     */\n    staticMapType: any;\n    /**\n     * Sets and gets the options for customizing the toggle state of shapes when selecting the legend in maps.\n     */\n    toggleLegendSettings: any;\n    /**\n     * Sets and gets the options for customizing the tooltip for the layers, markers, and bubbles in maps.\n     */\n    tooltipSettings: any;\n    /**\n     * Sets and gets the template for the map using the url.\n     * @default 'https://a.tile.openstreetmap.org/level/tileX/tileY.png'\n     */\n    urlTemplate: any;\n    /**\n     * Enables or disables the visibility state for the layers in maps.\n     * @default true\n     */\n    visible: any;\n    constructor(viewContainerRef: ViewContainerRef);\n}\n/**\n * Layer Array Directive\n * @private\n */\nexport declare class LayersDirective extends ArrayBase<LayersDirective> {\n    constructor();\n}\n"]}
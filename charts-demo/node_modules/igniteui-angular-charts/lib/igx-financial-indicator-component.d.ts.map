{"version":3,"file":"igx-financial-indicator-component.d.ts","sources":["igx-financial-indicator-component.d.ts"],"names":[],"mappingssourcesContent":["import { Type } from '@angular/core';\r\nimport { IgRect } from \"igniteui-angular-core\";\r\nimport { IgPoint } from \"igniteui-angular-core\";\r\nimport { IndicatorDisplayType } from \"./IndicatorDisplayType\";\r\nimport { TrendLineType } from \"igniteui-angular-core\";\r\nimport { IgxFinancialSeriesComponent } from \"./igx-financial-series-component\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { FinancialIndicator } from \"./FinancialIndicator\";\r\n/**\r\n * Represents the base functionality for a IgxDataChartComponent financial indicator series.\r\n*\r\n* The `IgxFinancialIndicatorComponent` class represents the base functionality for a IgxDataChartComponent financial indicator series.\r\n*\r\n* ```html\r\n* <igx-data-chart  #chart\r\n*     [dataSource]=\"data\" >\r\n* <igx-ordinal-time-x-axis\r\n*     label=\"label\"\r\n*     #xAxis>\r\n*     </igx-ordinal-time-x-axis>\r\n*  <igx-numeric-y-axis\r\n*     minimumValue=\"0\"\r\n*     #yAxis>\r\n*     </igx-numeric-y-axis>\r\n* <igx-mass-index-indicator\r\n* [xAxis]=\"xAxis\"\r\n*     [yAxis]=\"yAxis\"\r\n*     openMemberPath=\"open\"\r\n*     highMemberPath=\"high\"\r\n*     lowMemberPath=\"low\"\r\n*     closeMemberPath=\"close\"\r\n*     volumeMemberPath=\"volume\"   >\r\n*     </igx-mass-index-indicator >\r\n* </igx-data-chart>\r\n* ```\r\n*\r\n* ```ts\r\n* let series = new IgxMassIndexIndicatorComponent();\r\n*    series.xAxis = this.xAxis;\r\n*    series.yAxis = this.yAxis;\r\n*    series.openMemberPath = \"open\";\r\n*    series.highMemberPath = \"high\";\r\n*    series.lowMemberPath = \"low\";\r\n*    series.closeMemberPath = \"close\";\r\n*    this.chart.series.add(series);\r\n*\r\n* ```\r\n*/\r\nexport declare const IgxFinancialIndicatorComponent_PROVIDERS: ({\r\n    provide: typeof IgxFinancialSeriesComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare abstract class IgxFinancialIndicatorComponent extends IgxFinancialSeriesComponent {\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: FinancialIndicator;\r\n    constructor();\r\n    /**\r\n     * Gets or sets the display for the current FinancialIndicator object.\r\n    *\r\n    * The `displayType` property is used to display the current FinancialIndicator object.\r\n    *\r\n    * ```ts\r\n    * series.displayType= IndicatorDisplayType.Column;\r\n    * ```\r\n    *\r\n    * ```html\r\n    * <igx-data-chart  #chart\r\n    *     [dataSource]=\"data\" >\r\n    * <igx-ordinal-time-x-axis\r\n    *     label=\"label\"\r\n    *     #xAxis>\r\n    *     </igx-ordinal-time-x-axis>\r\n    *  <igx-numeric-y-axis\r\n    *     minimumValue=\"0\"\r\n    *     #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    * <igx-mass-index-indicator\r\n    * [xAxis]=\"xAxis\"\r\n    *     [yAxis]=\"yAxis\"\r\n    *     openMemberPath=\"open\"\r\n    *     highMemberPath=\"high\"\r\n    *     lowMemberPath=\"low\"\r\n    *     closeMemberPath=\"close\"\r\n    *     volumeMemberPath=\"volume\"\r\n    * \tdisplayType=\"Column\"   >\r\n    *     </igx-mass-index-indicator >\r\n    * </igx-data-chart>\r\n    * ```\r\n    */\r\n    displayType: IndicatorDisplayType;\r\n    /**\r\n     * Gets or sets the number of values to hide at the beginning of the indicator.\r\n    *\r\n    * Use the `ignoreFirst` propert to hide the number of values at the beginning of the indicator.\r\n    *\r\n    * ```html\r\n    * <igx-data-chart  #chart\r\n    *     [dataSource]=\"data\" >\r\n    * <igx-ordinal-time-x-axis\r\n    *     label=\"label\"\r\n    *     #xAxis>\r\n    *     </igx-ordinal-time-x-axis>\r\n    *  <igx-numeric-y-axis\r\n    *     minimumValue=\"0\"\r\n    *     #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    * <igx-mass-index-indicator\r\n    * [xAxis]=\"xAxis\"\r\n    *     [yAxis]=\"yAxis\"\r\n    *     openMemberPath=\"open\"\r\n    *     highMemberPath=\"high\"\r\n    *     lowMemberPath=\"low\"\r\n    *     closeMemberPath=\"close\"\r\n    *     volumeMemberPath=\"volume\"\r\n    * \tignoreFirst=\"2\" >\r\n    *     </igx-mass-index-indicator >\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    * series.ignoreFirst  = 2;\r\n    * ```\r\n    */\r\n    ignoreFirst: number;\r\n    /**\r\n     * Gets or sets the trend type for the current indicator series.\r\n    *\r\n    * Use `trendLineType` property to get the trend type for the current indicator series.\r\n    *\r\n    * ```html\r\n    * <igx-data-chart\r\n    *     [dataSource]=\"data\" >\r\n    *    <igx-ordinal-time-x-axis\r\n    *     label=\"label\"\r\n    *     #xAxis>\r\n    *     </igx-ordinal-time-x-axis>\r\n    *     <igx-numeric-y-axis #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    *     <igx-mass-index-indicator\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *         openMemberPath=\"open\"\r\n    *         highMemberPath=\"high\"\r\n    *         lowMemberPath=\"low\"\r\n    *         closeMemberPath=\"close\"\r\n    * \t\ttrendLineType=\"CubicFit\">\r\n    *     </igx-mass-index-indicator>\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    * series.trendLineType= TrendLineType.CubicFit;\r\n    * ```\r\n    */\r\n    trendLineType: TrendLineType;\r\n    /**\r\n     * Gets or sets the brush to use to draw the trend line.\r\n    *\r\n    * Use the `trendLineBrush` propert to draw the trend line.\r\n    *\r\n    * ```html\r\n    * <igx-data-chart  #chart\r\n    *     [dataSource]=\"data\" >\r\n    * <igx-ordinal-time-x-axis\r\n    *     label=\"label\"\r\n    *     #xAxis>\r\n    *     </igx-ordinal-time-x-axis>\r\n    *  <igx-numeric-y-axis\r\n    *     minimumValue=\"0\"\r\n    *     #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    * <igx-mass-index-indicator\r\n    * [xAxis]=\"xAxis\"\r\n    *     [yAxis]=\"yAxis\"\r\n    *     openMemberPath=\"open\"\r\n    *     highMemberPath=\"high\"\r\n    *     lowMemberPath=\"low\"\r\n    *     closeMemberPath=\"close\"\r\n    *     volumeMemberPath=\"volume\"\r\n    * \ttrendLineBrush=\"Red\">\r\n    *     </igx-mass-index-indicator >\r\n    * </igx-data-chart>\r\n    * ```\r\n    */\r\n    trendLineBrush: string;\r\n    /**\r\n     * Gets the effective TrendLineBrush for this indicator.\r\n    *\r\n    * Use the `actualTrendLineBrush` property to Gets the effective TrendLineBrush for the FinancialIndicator.\r\n    */\r\n    actualTrendLineBrush: string;\r\n    /**\r\n     * Gets or sets the thickness of the current indicator object's trend line.\r\n    *\r\n    * Use `trendLineThickness` property for the thickness of the current indicator object's trend line.\r\n    *\r\n    * ```html\r\n    * <igx-data-chart  #chart\r\n    *     [dataSource]=\"data\" >\r\n    * <igx-ordinal-time-x-axis\r\n    *     label=\"label\"\r\n    *     #xAxis>\r\n    *     </igx-ordinal-time-x-axis>\r\n    *  <igx-numeric-y-axis\r\n    *     minimumValue=\"0\"\r\n    *     #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    * <igx-mass-index-indicator\r\n    * [xAxis]=\"xAxis\"\r\n    *     [yAxis]=\"yAxis\"\r\n    *     openMemberPath=\"open\"\r\n    *     highMemberPath=\"high\"\r\n    *     lowMemberPath=\"low\"\r\n    *     closeMemberPath=\"close\"\r\n    *     volumeMemberPath=\"volume\"\r\n    * \ttrendLineThickness=\"2\" >\r\n    *     </igx-mass-index-indicator >\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    *  series.trendLineThickness=2 ;\r\n    * ```\r\n    */\r\n    trendLineThickness: number;\r\n    /**\r\n     * Gets or sets the trend line period for the current series.\r\n     * The typical, and initial, value for trend line period is 7.\r\n    *\r\n    * Use `trendLinePeriod` property for the trend line period of the current series.\r\n    *\r\n    * ```html\r\n    * <igx-data-chart  #chart\r\n    *     [dataSource]=\"data\" >\r\n    * <igx-ordinal-time-x-axis\r\n    *     label=\"label\"\r\n    *     #xAxis>\r\n    *     </igx-ordinal-time-x-axis>\r\n    *  <igx-numeric-y-axis\r\n    *     minimumValue=\"0\"\r\n    *     #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    * <igx-mass-index-indicator\r\n    * [xAxis]=\"xAxis\"\r\n    *     [yAxis]=\"yAxis\"\r\n    *     openMemberPath=\"open\"\r\n    *     highMemberPath=\"high\"\r\n    *     lowMemberPath=\"low\"\r\n    *     closeMemberPath=\"close\"\r\n    *     volumeMemberPath=\"volume\"\r\n    * \ttrendLinePeriod=\"30\" >\r\n    *     </igx-mass-index-indicator >\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    * series.trendLinePeriod  =30;\r\n    * ```\r\n    */\r\n    trendLinePeriod: number;\r\n    /**\r\n     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n    \r\n    * @param world  * The world coordinate for which to get a value bounding box for\r\n    *\r\n    * The `getSeriesValueBoundingBox` method returns the best available value bounding box within the series that has the best value match for the world position provided.\r\n    */\r\n    getSeriesValueBoundingBox(world: IgPoint): IgRect;\r\n    getSeriesValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean): number;\r\n    getPreviousOrExactIndex(world: IgPoint, skipUnknowns: boolean): number;\r\n    getNextOrExactIndex(world: IgPoint, skipUnknowns: boolean): number;\r\n    /**\r\n     * Scrolls the series to display the item for the specified data item.\r\n     * The series is scrolled by the minimum amount required to place the specified data item within\r\n     * the central 80% of the visible axis.\r\n    \r\n    * @param item  * The data item (item) to scroll to.\r\n    *\r\n    * The `scrollIntoView` method scrolls the series to display the item for the specified data item.\r\n    */\r\n    scrollIntoView(item: any): boolean;\r\n}\r\n"]}
{"version":3,"file":"igx-category-y-axis-component.d.ts","sources":["igx-category-y-axis-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type, EventEmitter } from '@angular/core';\r\nimport { IgRect } from \"igniteui-angular-core\";\r\nimport { IgPoint } from \"igniteui-angular-core\";\r\nimport { IgxCategoryAxisBaseComponent } from \"./igx-category-axis-base-component\";\r\nimport { IgxAxisComponent } from \"./igx-axis-component\";\r\nimport { CategoryYAxis } from \"./CategoryYAxis\";\r\n/**\r\n * Represents a IgxDataChartComponent category Y axis.\r\n*/\r\nexport declare const IgxCategoryYAxisComponent_PROVIDERS: {\r\n    provide: typeof IgxAxisComponent;\r\n    useExisting: Type<any>;\r\n}[];\r\nexport declare class IgxCategoryYAxisComponent extends IgxCategoryAxisBaseComponent {\r\n    protected createImplementation(): CategoryYAxis;\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: CategoryYAxis;\r\n    constructor();\r\n    /**\r\n     * Gets if the current axis is a vertical axis.\r\n    */\r\n    readonly isVertical: boolean;\r\n    /**\r\n     * Gets or sets the frequency of displayed labels.\r\n     * The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.\r\n    */\r\n    interval: number;\r\n    /**\r\n     * Gets the effective value for the current Interval.\r\n    */\r\n    actualInterval: number;\r\n    /**\r\n     * Gets or sets the frequency of displayed minor lines.\r\n     * The set value is a factor that determines how the minor lines will be displayed.\r\n    */\r\n    minorInterval: number;\r\n    /**\r\n     * Gets the effective value for the current MinorInterval.\r\n    */\r\n    actualMinorInterval: number;\r\n    getCategoryBoundingBox(point: IgPoint, useInterpolation: boolean, singularWidth: number): IgRect;\r\n    scrollRangeIntoView(minimum: number, maximum: number): void;\r\n    /**\r\n     * Scrolls the specified item into view.\r\n    \r\n    * @param item  * Data item to scroll into view\r\n    */\r\n    scrollIntoView(item: any): void;\r\n    private _actualIntervalChange;\r\n    readonly actualIntervalChange: EventEmitter<number>;\r\n    private _actualMinorIntervalChange;\r\n    readonly actualMinorIntervalChange: EventEmitter<number>;\r\n}\r\n"]}
import { Type } from '@angular/core';
import { IgxHorizontalStackedSeriesBaseComponent } from "./igx-horizontal-stacked-series-base-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { StackedColumnSeries } from "./StackedColumnSeries";
/**
 * Represents a IgxDataChartComponent stacked column series.
*/
import * as ɵngcc0 from '@angular/core';
export declare const IgxStackedColumnSeriesComponent_PROVIDERS: ({
    provide: typeof IgxMarkerSeriesComponent;
    useExisting: Type<any>;
} | {
    provide: typeof IgxSeriesComponent;
    useExisting: Type<any>;
})[];
export declare class IgxStackedColumnSeriesComponent extends IgxHorizontalStackedSeriesBaseComponent {
    protected createImplementation(): StackedColumnSeries;
    /**
                                 * @hidden
                                 */
    readonly i: StackedColumnSeries;
    constructor();
    /**
     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
    */
    radiusX: number;
    /**
     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
    */
    radiusY: number;
    /**
     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
    
    */
    getItemSpan(): number;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxStackedColumnSeriesComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxStackedColumnSeriesComponent, "igx-stacked-column-series", never, { "radiusX": "radiusX"; "radiusY": "radiusY"; }, {}, never, never>;
}

//# sourceMappingURL=igx-stacked-column-series-component.d.ts.map
{"version":3,"file":"igx-scatter-polygon-series-component.d.ts","sources":["igx-scatter-polygon-series-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type } from '@angular/core';\r\nimport { IgDataTemplate } from \"igniteui-angular-core\";\r\nimport { IgxStyle } from \"igniteui-angular-core\";\r\nimport { MarkerType } from \"./MarkerType\";\r\nimport { CollisionAvoidanceType } from \"./CollisionAvoidanceType\";\r\nimport { IgxShapeSeriesBaseComponent } from \"./igx-shape-series-base-component\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { ScatterPolygonSeries } from \"./ScatterPolygonSeries\";\r\n/**\r\n * Series class which renders polygons as Paths based on lists of points in the ItemsSource.\r\n*/\r\nexport declare const IgxScatterPolygonSeriesComponent_PROVIDERS: ({\r\n    provide: typeof IgxShapeSeriesBaseComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare class IgxScatterPolygonSeriesComponent extends IgxShapeSeriesBaseComponent {\r\n    protected createImplementation(): ScatterPolygonSeries;\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: ScatterPolygonSeries;\r\n    constructor();\r\n    /**\r\n     * Returns whether the current series supports visual markers.\r\n    */\r\n    readonly hasMarkers: boolean;\r\n    /**\r\n     * The default style to apply to all Shapes in the series.\r\n    */\r\n    shapeStyle: IgxStyle;\r\n    /**\r\n     * Gets or sets the marker type for the current series object.\r\n     * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n    */\r\n    markerType: MarkerType;\r\n    /**\r\n     * Gets or sets the MarkerTemplate for the current series object.\r\n    */\r\n    markerTemplate: IgDataTemplate;\r\n    /**\r\n     * Gets or sets thickness of the marker outline\r\n    */\r\n    markerThickness: number;\r\n    /**\r\n     * Gets the effective marker template for the current series object.\r\n    */\r\n    actualMarkerTemplate: IgDataTemplate;\r\n    /**\r\n     * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n    */\r\n    markerBrush: string;\r\n    /**\r\n     * Gets the effective marker brush for the current series object.\r\n    */\r\n    actualMarkerBrush: string;\r\n    /**\r\n     * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n    */\r\n    markerOutline: string;\r\n    /**\r\n     * Gets the effective marker outline for the current series object.\r\n    */\r\n    actualMarkerOutline: string;\r\n    /**\r\n     * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n    */\r\n    markerCollisionAvoidance: CollisionAvoidanceType;\r\n    findByName(name: string): any;\r\n}\r\n"]}
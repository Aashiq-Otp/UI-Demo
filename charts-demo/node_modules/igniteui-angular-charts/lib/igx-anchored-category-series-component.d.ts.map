{"version":3,"file":"igx-anchored-category-series-component.d.ts","sources":["igx-anchored-category-series-component.d.ts"],"names":[],"mappingssourcesContent":["import { Type } from '@angular/core';\r\nimport { IgPoint } from \"igniteui-angular-core\";\r\nimport { TrendLineType } from \"igniteui-angular-core\";\r\nimport { CategorySeriesMarkerCollisionAvoidance } from \"./CategorySeriesMarkerCollisionAvoidance\";\r\nimport { ConsolidatedItemHitTestBehavior } from \"./ConsolidatedItemHitTestBehavior\";\r\nimport { IgxCategorySeriesComponent } from \"./igx-category-series-component\";\r\nimport { IgxMarkerSeriesComponent } from \"./igx-marker-series-component\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { AnchoredCategorySeries } from \"./AnchoredCategorySeries\";\r\n/**\r\n * Represents the base class for all IgxDataChartComponent anchored category/value series.\r\n*\r\n* The `IgxAnchoredCategorySeriesComponent` represents the base class for all IgxDataChartComponent anchored category/value series.\r\n*\r\n* ```html\r\n* <igx-data-chart [dataSource]=\"data\">\r\n*     <igx-category-x-axis\r\n*         label=\"label\"\r\n*         #xAxis>\r\n*     </igx-category-x-axis>\r\n*     <igx-numeric-y-axis #yAxis>\r\n*     </igx-numeric-y-axis>\r\n*     <igx-column-series\r\n*         [xAxis]=\"xAxis\"\r\n*         [yAxis]=\"yAxis\"\r\n*         valueMemberPath=\"value\"\r\n*         markerType=\"circle\" >\r\n*     </igx-column-series>\r\n* </igx-data-chart>\r\n* ```\r\n*/\r\nexport declare const IgxAnchoredCategorySeriesComponent_PROVIDERS: ({\r\n    provide: typeof IgxMarkerSeriesComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare abstract class IgxAnchoredCategorySeriesComponent extends IgxCategorySeriesComponent {\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: AnchoredCategorySeries;\r\n    constructor();\r\n    /**\r\n     * Gets or sets the value mapping property for the current series object.\r\n    *\r\n    * The `valueMemberPath` property is used for the value mapping property of the current series object.\r\n    *\r\n    * ```html\r\n    * <igx-data-chart [dataSource]=\"data\">\r\n    *     <igx-category-x-axis\r\n    *         label=\"label\"\r\n    *         #xAxis>\r\n    *     </igx-category-x-axis>\r\n    *     <igx-numeric-y-axis #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    *\r\n    *     <igx-column-series\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *         valueMemberPath=\"value\" >\r\n    *     </igx-column-series>\r\n    * </igx-data-chart>\r\n    * ```\r\n    */\r\n    valueMemberPath: string;\r\n    /**\r\n     * Gets or sets the trend type for the current series object.\r\n    *\r\n    * The `trendLineType` property is used for the current series object's trend type.'\r\n    *\r\n    * ```html\r\n    * <igx-data-chart [dataSource]=\"data\">\r\n    *     <igx-category-x-axis\r\n    *         label=\"label\"\r\n    *         #xAxis>\r\n    *     </igx-category-x-axis>\r\n    *     <igx-numeric-y-axis #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    *\r\n    *     <igx-column-series\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *         valueMemberPath=\"value\"\r\n    *         markerType=\"circle\"\r\n    *         trendLineType=\"simpleAverage\" >\r\n    *     </igx-column-series>\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    * series.trendLineType= \"CubicFit\";\r\n    * ```\r\n    */\r\n    trendLineType: TrendLineType;\r\n    /**\r\n     * Gets or sets the brush to use to draw the trend line.\r\n    *\r\n    * The `trendLineBrush` property is used to brush the trend line.\r\n    *\r\n    * ```html\r\n    * <igx-data-chart [dataSource]=\"data\">\r\n    *     <igx-category-x-axis\r\n    *         label=\"label\"\r\n    *         #xAxis>\r\n    *     </igx-category-x-axis>\r\n    *     <igx-numeric-y-axis #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    *\r\n    *     <igx-column-series\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *         valueMemberPath=\"value\"\r\n    *         markerType=\"circle\"\r\n    *         trendLineBrush= \"grey\"\t>\r\n    *     </igx-column-series>\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    * series.trendLineBrush=\"red\";\r\n    * ```\r\n    */\r\n    trendLineBrush: string;\r\n    /**\r\n     * Gets the effective TrendLineBrush for this series.\r\n    *\r\n    * The `actualTrendLineBrush` property is used to gets the effective `trendLineBrush` for this series.\r\n    */\r\n    actualTrendLineBrush: string;\r\n    /**\r\n     * Gets or sets the thickness of the current series object's trend line.\r\n    *\r\n    * The `trendLineThickness` property is used for thickness of the current series object's trend line.\r\n    *\r\n    * ```html\r\n    * <igx-data-chart [dataSource]=\"data\">\r\n    *     <igx-category-x-axis\r\n    *         label=\"label\"\r\n    *         #xAxis>\r\n    *     </igx-category-x-axis>\r\n    *     <igx-numeric-y-axis #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    *     <igx-column-series\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *         valueMemberPath=\"value\"\r\n    *         markerType=\"circle\"\r\n    * \t\ttrendLineThickness= 2  >\r\n    *     </igx-column-series>\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    * series.trendLineThickness= 2;\r\n    * ```\r\n    */\r\n    trendLineThickness: number;\r\n    /**\r\n     * Gets or sets the trend line period for the current series.\r\n     * The typical, and initial, value for trend line period is 7.\r\n    *\r\n    * The `trendLinePeriod` property is used for trend line period of the current series.\r\n    *\r\n    * ```html\r\n    * <igx-data-chart [dataSource]=\"data\">\r\n    *     <igx-category-x-axis\r\n    *         label=\"label\"\r\n    *         #xAxis>\r\n    *     </igx-category-x-axis>\r\n    *     <igx-numeric-y-axis #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    *\r\n    *     <igx-column-series\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *         valueMemberPath=\"value\"\r\n    *         markerType=\"circle\"\r\n    *         trendLinePeriod: \"7\">\r\n    *     </igx-column-series>\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    * series.trendLinePeriod= 7;\r\n    * ```\r\n    */\r\n    trendLinePeriod: number;\r\n    /**\r\n     * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n    *\r\n    * The `markerCollisionAvoidance` property controls the technique the chart uses to avoid overlapping markers.\r\n    *\r\n    * ```html\r\n    * <igx-data-chart [dataSource]=\"data\">\r\n    *     <igx-category-x-axis\r\n    *         label=\"label\"\r\n    *         #xAxis>\r\n    *     </igx-category-x-axis>\r\n    *     <igx-numeric-y-axis #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    *\r\n    *     <igx-column-series\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *         valueMemberPath=\"value\"\r\n    *         markerType=\"circle\"\r\n    * \t\tmarkerCollisionAvoidance= \"fade\"\r\n    *         >\r\n    *     </igx-column-series>\r\n    * </igx-data-chart>\r\n    * ```\r\n    */\r\n    markerCollisionAvoidance: CategorySeriesMarkerCollisionAvoidance;\r\n    /**\r\n     * Determines the item returned in hit-testing when the pointer is over an object which represents several consolidated items.\r\n    *\r\n    * The `consolidatedItemHitTestBehavior` property is used to determines returned item in hit-testing when the pointer is over an object which represents several consolidated items.\r\n    */\r\n    consolidatedItemHitTestBehavior: ConsolidatedItemHitTestBehavior;\r\n    getItemValue(item: any, memberPathName: string): any;\r\n    /**\r\n     * Scrolls the series to display the item for the specified data item.\r\n     * The series is scrolled by the minimum amount required to place the specified data item within\r\n     * the central 80% of the visible axis.\r\n    \r\n    * @param item  * The data item (item) to scroll to.\r\n    *\r\n    * The `scrollIntoView` method is used to notifies the target axis or series that it should scroll the requested data item into view.\r\n    *\r\n    * ```ts\r\n    * this.series.scrollIntoView(dataItem);\r\n    * ```\r\n    */\r\n    scrollIntoView(item: any): boolean;\r\n    /**\r\n     * Gets the item that is the best match for the specified world coordinates.\r\n    \r\n    * @param world  * The world coordinates to use.\r\n    *\r\n    * The `getItem` method is used to gets the item that is the best match for the specified world coordinates.\r\n    *\r\n    * ```ts\r\n    * let item: number = this.series.getItem({x:.5,y:.5});\r\n    * ```\r\n    */\r\n    getItem(world: IgPoint): any;\r\n}\r\n"]}
{"version":3,"file":"igx-item-legend-component.d.ts","sources":["igx-item-legend-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type, OnDestroy, Renderer2, ElementRef, NgZone } from '@angular/core';\r\nimport { IgxLegendBaseComponent } from './igx-legend-base-component';\r\nimport { ItemLegend } from \"./ItemLegend\";\r\nexport declare const IgxItemLegendComponent_PROVIDERS: {\r\n    provide: typeof IgxLegendBaseComponent;\r\n    useExisting: Type<any>;\r\n}[];\r\n/**\r\n * Represents a legend that displays an item for each point in the series.\r\n*\r\n* You can use the `IgxItemLegendComponent` to display a legend item for each data member bound to the `IgxBubbleSeriesComponent`\r\n*/\r\nexport declare class IgxItemLegendComponent extends IgxLegendBaseComponent implements OnDestroy {\r\n    private renderer;\r\n    private elRef;\r\n    private ngZone;\r\n    container: Element;\r\n    constructor(renderer: Renderer2, elRef: ElementRef, ngZone: NgZone);\r\n    private _wrapper;\r\n    ngOnDestroy(): void;\r\n    protected createImplementation(): ItemLegend;\r\n    readonly i: ItemLegend;\r\n    createItemwiseLegendItems(legendItems: any, series: any): void;\r\n    exportVisualData(): any;\r\n    exportSerializedVisualData(): any;\r\n    /**\r\n * Gets whether or not this legend supports itemwise visuals\r\n*/\r\n    readonly isItemwise: boolean;\r\n}\r\n"]}
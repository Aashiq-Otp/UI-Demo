{"version":3,"file":"igx-line-series-component.d.ts","sources":["igx-line-series-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type } from '@angular/core';\r\nimport { UnknownValuePlotting } from \"igniteui-angular-core\";\r\nimport { IgxHorizontalAnchoredCategorySeriesComponent } from \"./igx-horizontal-anchored-category-series-component\";\r\nimport { IgxMarkerSeriesComponent } from \"./igx-marker-series-component\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { LineSeries } from \"./LineSeries\";\r\n/**\r\n * Represents a IgxDataChartComponent line series.\r\n * Displays trend over time or ordered categories.Useful when there are many data points and the order is important.\r\n*\r\n* `IgxLineSeriesComponent` belongs to a group of `IgxCategorySeriesComponent` and it is rendered using a collection of points connected by straight line segments.\r\n*\r\n* ```html\r\n*  <igx-data-chart\r\n*     [dataSource]=\"data\">\r\n*     <igx-category-x-axis\r\n*         label=\"label\"\r\n*         #xAxis>\r\n*     </igx-category-x-axis>\r\n*     <igx-numeric-y-axis\r\n*         #yAxis>\r\n*     </igx-numeric-y-axis>\r\n*     <igx-line-series\r\n*         [xAxis]=\"xAxis\"\r\n*         [yAxis]=\"yAxis\"\r\n*         valueMemberPath=\"value\">\r\n*     </igx-line-series>\r\n* </igx-data-chart>\r\n* ```\r\n*\r\n* ```ts\r\n* let series: IgxLineSeriesComponent = new IgxLineSeriesComponent();\r\n* series.xAxis = this.xAxis;\r\n* series.yAxis = this.yAxis;\r\n* series.valueMemberPath = \"value\";\r\n* this.chart.series.add(series);\r\n* ```\r\n*/\r\nexport declare const IgxLineSeriesComponent_PROVIDERS: ({\r\n    provide: typeof IgxMarkerSeriesComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare class IgxLineSeriesComponent extends IgxHorizontalAnchoredCategorySeriesComponent {\r\n    protected createImplementation(): LineSeries;\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: LineSeries;\r\n    constructor();\r\n    /**\r\n     * Gets whether the current series shows an area or line shape.\r\n    *\r\n    * Gets whether the `IgxSeriesComponent` shows an area or a line shape.\r\n    *\r\n    * ```ts\r\n    * let isAreaOrLine: boolean = series.isAreaOrLine;\r\n    * ```\r\n    */\r\n    readonly isAreaOrLine: boolean;\r\n    /**\r\n     * Determines how unknown values will be plotted on the chart.\r\n     * Null and Double.NaN are two examples of unknown values.\r\n    *\r\n    * Determines how unknown values will be plotted for the `IgxSeriesComponent`. This can be set to `LinearInterpolate` to create a continous shape or `DontPlot` to create breaks in the series.\r\n    *\r\n    * Null and Double.NaN are two examples of unknown values.\r\n    *\r\n    * ```html\r\n    * <igx-data-chart #chart\r\n    *     [dataSource]=\"data\">\r\n    *     <igx-category-x-axis\r\n    *         label=\"label\"\r\n    *         #xAxis>\r\n    *     </igx-category-x-axis>\r\n    *     <igx-numeric-y-axis\r\n    *         #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    *     <igx-line-series\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *         valueMemberPath=\"value\"\r\n    *         unknownValuePlotting=\"LinearInterpolate\">\r\n    *     </igx-line-series>\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    * series.unknownValuePlotting = UnknownValuePlotting.LinearInterpolate;\r\n    * ```\r\n    */\r\n    unknownValuePlotting: UnknownValuePlotting;\r\n}\r\n"]}
{"version":3,"file":"igx-scatter-area-series-component.d.ts","sources":["igx-scatter-area-series-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type } from '@angular/core';\r\nimport { IgPoint } from \"igniteui-angular-core\";\r\nimport { IgxColorScaleComponent } from \"./igx-color-scale-component\";\r\nimport { IgxScatterTriangulationSeriesComponent } from \"./igx-scatter-triangulation-series-component\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { ScatterAreaSeries } from \"./ScatterAreaSeries\";\r\n/**\r\n * Series class which draws a colored 2D surface based on a triangulation of XY data with numeric values assigned to each point.\r\n*/\r\nexport declare const IgxScatterAreaSeriesComponent_PROVIDERS: ({\r\n    provide: typeof IgxScatterTriangulationSeriesComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare class IgxScatterAreaSeriesComponent extends IgxScatterTriangulationSeriesComponent {\r\n    protected createImplementation(): ScatterAreaSeries;\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: ScatterAreaSeries;\r\n    constructor();\r\n    /**\r\n     * Gets or sets ColorScale used to resolve the color values of points in the series.\r\n    */\r\n    colorScale: IgxColorScaleComponent;\r\n    /**\r\n     * Gets or sets the name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.\r\n    */\r\n    colorMemberPath: string;\r\n    findByName(name: string): any;\r\n    protected _styling(container: any, component: any, parent?: any): void;\r\n    getItemValue(item: any, memberPathName: string): any;\r\n    /**\r\n     * Gets the item that is the best match for the specified world coordinates.\r\n    \r\n    * @param world  * The world coordinates to use.\r\n    */\r\n    getItem(world: IgPoint): any;\r\n    /**\r\n     * Attaches an image to the view of this series\r\n    \r\n    */\r\n    attachImage(image: any): void;\r\n}\r\n"]}
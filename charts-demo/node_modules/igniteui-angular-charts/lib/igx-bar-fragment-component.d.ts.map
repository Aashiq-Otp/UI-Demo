{"version":3,"file":"igx-bar-fragment-component.d.ts","sources":["igx-bar-fragment-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type } from '@angular/core';\r\nimport { IgRect } from \"igniteui-angular-core\";\r\nimport { IgPoint } from \"igniteui-angular-core\";\r\nimport { IgxNumericXAxisComponent } from \"./igx-numeric-x-axis-component\";\r\nimport { IgxCategoryYAxisComponent } from \"./igx-category-y-axis-component\";\r\nimport { IgxColumnFragmentComponent } from \"./igx-column-fragment-component\";\r\nimport { IgxMarkerSeriesComponent } from \"./igx-marker-series-component\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { BarFragment } from \"./BarFragment\";\r\n/**\r\n * Represents one part of a StackedBarSeries.\r\n*/\r\nexport declare const IgxBarFragmentComponent_PROVIDERS: ({\r\n    provide: typeof IgxMarkerSeriesComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare class IgxBarFragmentComponent extends IgxColumnFragmentComponent {\r\n    protected createImplementation(): BarFragment;\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: BarFragment;\r\n    constructor();\r\n    /**\r\n     * The X-Axis for this BarFragment.\r\n    */\r\n    readonly barFragmentXAxis: IgxNumericXAxisComponent;\r\n    /**\r\n     * The Y-Axis for this BarFragment.\r\n    */\r\n    readonly barFragmentYAxis: IgxCategoryYAxisComponent;\r\n    protected _styling(container: any, component: any, parent?: any): void;\r\n    /**\r\n     * Gets the precise item index, if possible, based on the closeness to the previous or next whole integer. If the series cannot provide this information, GetExactItemIndex will return the same integer value as GetItemIndex.\r\n    \r\n    * @param world  * The world position for which to return the index.\r\n    */\r\n    getExactItemIndex(world: IgPoint): number;\r\n    /**\r\n     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n    \r\n    * @param world  * The world coordinate for which to get a value bounding box for\r\n    */\r\n    getSeriesValueBoundingBox(world: IgPoint): IgRect;\r\n    /**\r\n     * Gets the item that is the best match for the specified world coordinates.\r\n    \r\n    * @param world  * The world coordinates to use.\r\n    */\r\n    getItem(world: IgPoint): any;\r\n}\r\n"]}
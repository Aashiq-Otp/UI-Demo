{"version":3,"file":"igx-marker-series-component.d.ts","sources":["igx-marker-series-component.d.ts"],"names":[],"mappingssourcesContent":["import { Type } from '@angular/core';\r\nimport { IgDataTemplate } from \"igniteui-angular-core\";\r\nimport { MarkerType } from \"./MarkerType\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { MarkerSeries } from \"./MarkerSeries\";\r\n/**\r\n * Represents the base class for series containing markers.\r\n*\r\n* MarkerSeries represents the base class for series containing markers.\r\n*\r\n* Example:\r\n*\r\n* ```html\r\n* <igx-data-chart\r\n*     [dataSource]=\"data\">\r\n* \t<igx-category-x-axis\r\n*         label=\"label\"\r\n*         #xAxis\r\n*         >\r\n*       </igx-category-x-axis>\r\n*       <igx-numeric-y-axis\r\n*         minimumValue=\"0\"\r\n*         #yAxis>\r\n*       </igx-numeric-y-axis>\r\n* \t <igx-column-series\r\n*         #series\r\n*         [xAxis]=\"xAxis\"\r\n*         [yAxis]=\"yAxis\"\r\n*      valueMemberPath=\"value\">\r\n*      </igx-column-series>\r\n* </igx-data-chart>\r\n* ```\r\n*\r\n* ```ts\r\n* let series: IgxMarkerSeriesComponent = new IgxMarkerSeriesComponent();\r\n* series.xAxis = this.xAxis;\r\n* series.yAxis = this.yAxis;\r\n* series.valueMemberPath = \"value\";\r\n* this.chart.series.add(series);\r\n* ```\r\n*/\r\nexport declare const IgxMarkerSeriesComponent_PROVIDERS: {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n}[];\r\nexport declare abstract class IgxMarkerSeriesComponent extends IgxSeriesComponent {\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: MarkerSeries;\r\n    constructor();\r\n    /**\r\n     * Returns whether the current series supports visual markers.\r\n    *\r\n    * `hasMarkers` property is overriden, it returns whether the current series supports visual markers. You can use it like this:\r\n    *\r\n    * ```ts\r\n    *  let gotMarkers: boolean = this.series.hasMarkers;\r\n    * ```\r\n    */\r\n    readonly hasMarkers: boolean;\r\n    /**\r\n     * Gets or sets the marker type for the current series object.\r\n     * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n    *\r\n    * `markerType` property gets or sets the marker type for the current series object. For example, you can set it like this:\r\n    *\r\n    * ```html\r\n    * <igx-data-chart\r\n    *     [dataSource]=\"data\">\r\n    * \t <igx-category-x-axis\r\n    *         label=\"label\"\r\n    *         #xAxis>\r\n    *     </igx-category-x-axis>\r\n    *     <igx-numeric-y-axis\r\n    *         #yAxis>\r\n    *     </igx-numeric-y-axis>\r\n    * \t <igx-column-series\r\n    *         #series\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *      valueMemberPath=\"value\"\r\n    * \t markerType = \"circle\">\r\n    *      </igx-column-series>\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    * this.series.markerType = \"circle\";\r\n    * ```\r\n    */\r\n    markerType: MarkerType;\r\n    /**\r\n     * Gets or sets the MarkerTemplate for the current series object.\r\n    *\r\n    * `markerTemplate` property gets or sets the MarkerTemplate for the current series object. For example, you can use it like this:\r\n    *\r\n    * ```html\r\n    * <igx-data-chart\r\n    *     [dataSource]=\"data\">\r\n    * \t<igx-category-x-axis\r\n    *         label=\"label\"\r\n    *         #xAxis>\r\n    *       </igx-category-x-axis>\r\n    *       <igx-numeric-y-axis #yAxis>\r\n    *       </igx-numeric-y-axis>\r\n    * \t <igx-column-series\r\n    *         #series\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *      valueMemberPath=\"value\"\r\n    * \t markerTemplate=\"circleMarkerTemplate\">\r\n    *      </igx-column-series>\r\n    * </igx-data-chart>\r\n    * ```\r\n    */\r\n    markerTemplate: IgDataTemplate;\r\n    /**\r\n     * Gets or sets thickness of the marker outline\r\n    */\r\n    markerThickness: number;\r\n    /**\r\n     * Gets the effective marker template for the current series object.\r\n    *\r\n    * `actualMarkerTemplate` property gets the effective marker template for the current series object. You can use it like this:\r\n    *\r\n    * ```ts\r\n    *  let effectiveMarkerTemplate: IgxDataTemplate = this.series.actualMarkerTemplate;\r\n    * ```\r\n    */\r\n    actualMarkerTemplate: IgDataTemplate;\r\n    /**\r\n     * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n    *\r\n    * `markerBrush` property gets or sets the brush that specifies how the current series object's marker interiors are painted. You can use it like this:\r\n    *\r\n    * ```html\r\n    * <igx-data-chart\r\n    *     [dataSource]=\"data\">\r\n    * \t<igx-category-x-axis\r\n    *         label=\"label\"\r\n    *         #xAxis>\r\n    *       </igx-category-x-axis>\r\n    *       <igx-numeric-y-axis #yAxis>\r\n    *       </igx-numeric-y-axis>\r\n    * \t <igx-column-series\r\n    *         #series\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *      valueMemberPath=\"value\"\r\n    * \t markerBrush = \"blue\">\r\n    *      </igx-column-series>\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    * this.series.markerBrush = \"red\";\r\n    * ```\r\n    */\r\n    markerBrush: string;\r\n    /**\r\n     * Gets the effective marker brush for the current series object.\r\n    *\r\n    * `actualMarkerBrush` property gets the effective marker brush for the current series object. For example, you can use it like this:\r\n    *\r\n    * ```ts\r\n    *  let effectiveMarkerBrush: string = this.series.actualMarkerBrush;\r\n    *\r\n    * ```\r\n    */\r\n    actualMarkerBrush: string;\r\n    /**\r\n     * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n    *\r\n    * `markerOutline` property gets or sets the brush that specifies how the current series object's marker outlines are painted. You can use it like this:\r\n    *\r\n    * ```html\r\n    * <igx-data-chart\r\n    *     [dataSource]=\"data\">\r\n    * \t<igx-category-x-axis\r\n    *         label=\"label\"\r\n    *         #xAxis>\r\n    *       </igx-category-x-axis>\r\n    *       <igx-numeric-y-axis #yAxis>\r\n    *       </igx-numeric-y-axis>\r\n    * \t <igx-column-series\r\n    *         #series\r\n    *         [xAxis]=\"xAxis\"\r\n    *         [yAxis]=\"yAxis\"\r\n    *      valueMemberPath=\"value\"\r\n    * \t markerOutline = \"blue\">\r\n    *      </igx-column-series>\r\n    * </igx-data-chart>\r\n    * ```\r\n    *\r\n    * ```ts\r\n    * this.series.markerOutline = \"red\";\r\n    * ```\r\n    */\r\n    markerOutline: string;\r\n    /**\r\n     * Gets the effective marker outline for the current series object.\r\n    *\r\n    *     `ActualMarkerOutline` property gets the effective marker outline for the current series object. You can use it like this:\r\n    *\r\n    * ```ts\r\n    *  let effectiveMarkerOutline: string = this.series.actualMarkerOutline;\r\n    *\r\n    * ```\r\n    */\r\n    actualMarkerOutline: string;\r\n}\r\n"]}
{"version":3,"file":"igx-column-series-component.d.ts","sources":["igx-column-series-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type } from '@angular/core';\r\nimport { IgRect } from \"igniteui-angular-core\";\r\nimport { IgPoint } from \"igniteui-angular-core\";\r\nimport { ConsolidatedItemsPosition } from \"./ConsolidatedItemsPosition\";\r\nimport { IgxHorizontalAnchoredCategorySeriesComponent } from \"./igx-horizontal-anchored-category-series-component\";\r\nimport { IgxMarkerSeriesComponent } from \"./igx-marker-series-component\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { ColumnSeries } from \"./ColumnSeries\";\r\n/**\r\n * Represents a IgxDataChartComponent column series.\r\n * Compare values across categories by using vertical rectangles.Use it when the order of categories is not important or for displaying\r\n * item counts such as a histogram.\r\n*\r\n* ```html\r\n*     <igx-data-chart [dataSource]=\"data\" >\r\n*       <igx-category-x-axis\r\n*         label=\"label\"\r\n*         #xAxis>\r\n*       </igx-category-x-axis>\r\n*       <igx-numeric-y-axis #yAxis>\r\n*       </igx-numeric-y-axis>\r\n*       <igx-column-series\r\n*         [xAxis]=\"xAxis\"\r\n*         [yAxis]=\"yAxis\"\r\n*         valueMemberPath=\"value\" >\r\n*       </igx-column-series>\r\n*     </igx-data-chart>\r\n* ```\r\n*/\r\nexport declare const IgxColumnSeriesComponent_PROVIDERS: ({\r\n    provide: typeof IgxMarkerSeriesComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare class IgxColumnSeriesComponent extends IgxHorizontalAnchoredCategorySeriesComponent {\r\n    protected createImplementation(): ColumnSeries;\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: ColumnSeries;\r\n    constructor();\r\n    /**\r\n     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.\r\n    */\r\n    radiusX: number;\r\n    /**\r\n     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.\r\n    */\r\n    radiusY: number;\r\n    /**\r\n     * The positioning logic to use for columns which have been consolidated into a single visual element.\r\n    */\r\n    consolidatedColumnVerticalPosition: ConsolidatedItemsPosition;\r\n    /**\r\n     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n    \r\n    * @param world  * The world coordinate for which to get a value bounding box for\r\n    */\r\n    getSeriesValueBoundingBox(world: IgPoint): IgRect;\r\n    /**\r\n     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\r\n    \r\n    */\r\n    getItemSpan(): number;\r\n}\r\n"]}
{"version":3,"file":"igx-scatter-contour-series-component.d.ts","sources":["igx-scatter-contour-series-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type } from '@angular/core';\r\nimport { IgxValueBrushScaleComponent } from \"./igx-value-brush-scale-component\";\r\nimport { IgxContourValueResolverComponent } from \"./igx-contour-value-resolver-component\";\r\nimport { IgxScatterTriangulationSeriesComponent } from \"./igx-scatter-triangulation-series-component\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { ScatterContourSeries } from \"./ScatterContourSeries\";\r\n/**\r\n * Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.\r\n*/\r\nexport declare const IgxScatterContourSeriesComponent_PROVIDERS: ({\r\n    provide: typeof IgxScatterTriangulationSeriesComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare class IgxScatterContourSeriesComponent extends IgxScatterTriangulationSeriesComponent {\r\n    protected createImplementation(): ScatterContourSeries;\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: ScatterContourSeries;\r\n    constructor();\r\n    /**\r\n     * Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.\r\n    */\r\n    valueMemberPath: string;\r\n    /**\r\n     * Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\r\n    */\r\n    fillScale: IgxValueBrushScaleComponent;\r\n    /**\r\n     * Gets or set the ContourValueResolver used to determine the numeric values of contours.\r\n    */\r\n    valueResolver: IgxContourValueResolverComponent;\r\n    findByName(name: string): any;\r\n    protected _styling(container: any, component: any, parent?: any): void;\r\n    getItemValue(item: any, memberPathName: string): any;\r\n}\r\n"]}
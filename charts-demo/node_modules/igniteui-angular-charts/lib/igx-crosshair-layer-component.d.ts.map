{"version":3,"file":"igx-crosshair-layer-component.d.ts","sources":["igx-crosshair-layer-component.d.ts"],"names":[],"mappingssourcesContent":["import { Type } from '@angular/core';\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { Visibility } from \"igniteui-angular-core\";\r\nimport { IgxAnnotationLayerComponent } from \"./igx-annotation-layer-component\";\r\nimport { CrosshairLayer } from \"./CrosshairLayer\";\r\n/**\r\n * Represents an annotation layer that displays crosshair lines that cross through the closest value of the target series under the cursor.\r\n*/\r\nexport declare const IgxCrosshairLayerComponent_PROVIDERS: ({\r\n    provide: typeof IgxAnnotationLayerComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare class IgxCrosshairLayerComponent extends IgxAnnotationLayerComponent {\r\n    protected createImplementation(): CrosshairLayer;\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: CrosshairLayer;\r\n    constructor();\r\n    /**\r\n     * Gets or sets the color to use for the horizontal line. Leave null for an automatic value.\r\n    */\r\n    horizontalLineStroke: string;\r\n    /**\r\n     * Gets or sets the color to use for vertical line. Leave null for an automatic value.\r\n    */\r\n    verticalLineStroke: string;\r\n    /**\r\n     * Gets or sets the series to target this annotation to. If null, this annotation targets all series simultaneously.\r\n    */\r\n    targetSeries: IgxSeriesComponent;\r\n    /**\r\n     * Gets or sets whether to use value interpolation when drawing a line through the best value for the cursor position.\r\n    */\r\n    useInterpolation: boolean;\r\n    /**\r\n     * Gets or sets whether to draw annotations over the axes where the crosshair meets with them.\r\n    */\r\n    isAxisAnnotationEnabled: boolean;\r\n    /**\r\n     * Gets or sets the color to use for the x axis annotation text. Leave unset for an automatic value.\r\n    */\r\n    xAxisAnnotationTextColor: string;\r\n    /**\r\n     * Gets or sets the color to use for the x axis annotation backing. Leave unset for an automatic value.\r\n    */\r\n    xAxisAnnotationBackground: string;\r\n    /**\r\n     * Gets or sets the precision to use displaying values for interpolated crosshair positions.\r\n    */\r\n    xAxisAnnotationInterpolatedValuePrecision: number;\r\n    /**\r\n     * Gets or sets the color to use for the x axis annotation outline. Leave unset for an automatic value.\r\n    */\r\n    xAxisAnnotationOutline: string;\r\n    /**\r\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\r\n    */\r\n    xAxisAnnotationPaddingLeft: number;\r\n    /**\r\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\r\n    */\r\n    xAxisAnnotationPaddingTop: number;\r\n    /**\r\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\r\n    */\r\n    xAxisAnnotationPaddingRight: number;\r\n    /**\r\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\r\n    */\r\n    xAxisAnnotationPaddingBottom: number;\r\n    /**\r\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\r\n    */\r\n    yAxisAnnotationPaddingLeft: number;\r\n    /**\r\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\r\n    */\r\n    yAxisAnnotationPaddingTop: number;\r\n    /**\r\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\r\n    */\r\n    yAxisAnnotationPaddingRight: number;\r\n    /**\r\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\r\n    */\r\n    yAxisAnnotationPaddingBottom: number;\r\n    /**\r\n     * Gets or sets the stroke thickness for the x axis annotation backing. Leave unset for an automatic value.\r\n    */\r\n    xAxisAnnotationStrokeThickness: number;\r\n    /**\r\n     * Gets or sets the color to use for the y axis annotation text. Leave unset for an automatic value.\r\n    */\r\n    yAxisAnnotationTextColor: string;\r\n    /**\r\n     * Gets or sets the color to use for the y axis annotation backing. Leave unset for an automatic value.\r\n    */\r\n    yAxisAnnotationBackground: string;\r\n    /**\r\n     * Gets or sets the precision to use displaying values for interpolated crosshair positions.\r\n    */\r\n    yAxisAnnotationInterpolatedValuePrecision: number;\r\n    /**\r\n     * Gets or sets the color to use for the y axis annotation outline. Leave unset for an automatic value.\r\n    */\r\n    yAxisAnnotationOutline: string;\r\n    /**\r\n     * Gets or sets the stroke thickness for the y axis annotation backing. Leave unset for an automatic value.\r\n    */\r\n    yAxisAnnotationStrokeThickness: number;\r\n    /**\r\n     * Gets or sets whether to display the vertical line.\r\n    */\r\n    verticalLineVisibility: Visibility;\r\n    /**\r\n     * Gets or sets whether to display the horizontal line.\r\n    */\r\n    horizontalLineVisibility: Visibility;\r\n    /**\r\n     * Gets or sets whether to skip unknown values when searching for series values.\r\n    */\r\n    skipUnknownValues: boolean;\r\n    findByName(name: string): any;\r\n    protected _styling(container: any, component: any, parent?: any): void;\r\n}\r\n"]}
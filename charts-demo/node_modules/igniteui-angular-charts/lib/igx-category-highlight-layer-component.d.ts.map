{"version":3,"file":"igx-category-highlight-layer-component.d.ts","sources":["igx-category-highlight-layer-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type } from '@angular/core';\r\nimport { IgxCategoryAxisBaseComponent } from \"./igx-category-axis-base-component\";\r\nimport { IgxAnnotationLayerComponent } from \"./igx-annotation-layer-component\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { CategoryHighlightLayer } from \"./CategoryHighlightLayer\";\r\n/**\r\n * Represents an annotation layer that targets a category axis, or all category axes in the chart.\r\n * If the axis contains any series that are aligned between major gridlines of the axis (column, waterfall, etc) this will render a shape that fills the current category.\r\n * Otherwise it will render a band with an adjustable thickness at the closest gridline to the pointer position.\r\n * Setting UseIterpolation to true will cause the x position in the latter case to become affixed to the x position of the pointer.\r\n*/\r\nexport declare const IgxCategoryHighlightLayerComponent_PROVIDERS: ({\r\n    provide: typeof IgxAnnotationLayerComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare class IgxCategoryHighlightLayerComponent extends IgxAnnotationLayerComponent {\r\n    protected createImplementation(): CategoryHighlightLayer;\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: CategoryHighlightLayer;\r\n    constructor();\r\n    /**\r\n     * Gets or sets the axis to target this annotation to. If null, this annotation targets all category axes simultaneously.\r\n    */\r\n    targetAxis: IgxCategoryAxisBaseComponent;\r\n    /**\r\n     * Gets or sets whether to use value interpolation when drawing a line through the best value for the pointer position.\r\n    */\r\n    useInterpolation: boolean;\r\n    /**\r\n     * Gets or sets the width to use for the highlight region if drawing a band rather than filling a category.\r\n    */\r\n    bandHighlightWidth: number;\r\n    findByName(name: string): any;\r\n    protected _styling(container: any, component: any, parent?: any): void;\r\n}\r\n"]}
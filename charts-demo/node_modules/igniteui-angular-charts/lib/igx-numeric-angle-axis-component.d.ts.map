{"version":3,"file":"igx-numeric-angle-axis-component.d.ts","sources":["igx-numeric-angle-axis-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type } from '@angular/core';\r\nimport { IgxNumericAxisBaseComponent } from \"./igx-numeric-axis-base-component\";\r\nimport { IgxAxisComponent } from \"./igx-axis-component\";\r\nimport { NumericAngleAxis } from \"./NumericAngleAxis\";\r\n/**\r\n * Represents a IgxDataChartComponent angle based axis for polar series.\r\n*/\r\nexport declare const IgxNumericAngleAxisComponent_PROVIDERS: {\r\n    provide: typeof IgxAxisComponent;\r\n    useExisting: Type<any>;\r\n}[];\r\nexport declare class IgxNumericAngleAxisComponent extends IgxNumericAxisBaseComponent {\r\n    protected createImplementation(): NumericAngleAxis;\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: NumericAngleAxis;\r\n    constructor();\r\n    /**\r\n     * Gets if the current axis is of angular axis type\r\n    */\r\n    readonly isAngular: boolean;\r\n    /**\r\n     * Indicates the angle in degress that the chart's 0th angle should be offset.\r\n    */\r\n    startAngleOffset: number;\r\n    /**\r\n     * Gets the scaled angle value in radians based on the raw input.\r\n    \r\n    * @param unscaledValue  * The raw input value.\r\n    */\r\n    getScaledAngle(unscaledValue: number): number;\r\n    /**\r\n     * Gets the raw axis value back from the angle that would be used on the chart.\r\n    \r\n    * @param scaledValue  * The chart angle value.\r\n    */\r\n    getUnscaledAngle(scaledValue: number): number;\r\n}\r\n"]}
{"version":3,"file":"igx-scatter-base-component.d.ts","sources":["igx-scatter-base-component.d.ts"],"names":[],"mappingssourcesContent":["import { Type } from '@angular/core';\r\nimport { IgRect } from \"igniteui-angular-core\";\r\nimport { IgPoint } from \"igniteui-angular-core\";\r\nimport { IgxNumericXAxisComponent } from \"./igx-numeric-x-axis-component\";\r\nimport { IgxNumericYAxisComponent } from \"./igx-numeric-y-axis-component\";\r\nimport { TrendLineType } from \"igniteui-angular-core\";\r\nimport { CollisionAvoidanceType } from \"./CollisionAvoidanceType\";\r\nimport { IgxMarkerSeriesComponent } from \"./igx-marker-series-component\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { ScatterBase } from \"./ScatterBase\";\r\n/**\r\n * Represents the base class for all IgxDataChartComponent scatter series\r\n*/\r\nexport declare const IgxScatterBaseComponent_PROVIDERS: ({\r\n    provide: typeof IgxMarkerSeriesComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare abstract class IgxScatterBaseComponent extends IgxMarkerSeriesComponent {\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: ScatterBase;\r\n    constructor();\r\n    /**\r\n     * Checks if this series is a scatter series\r\n    */\r\n    readonly isScatter: boolean;\r\n    /**\r\n     * Gets or sets the effective x-axis for the current object.\r\n    */\r\n    xAxis: IgxNumericXAxisComponent;\r\n    /**\r\n     * Gets or sets the effective y-axis for the current object.\r\n    */\r\n    yAxis: IgxNumericYAxisComponent;\r\n    /**\r\n     * Gets or sets the value mapping property for the current series object.\r\n    */\r\n    xMemberPath: string;\r\n    /**\r\n     * Gets or sets the value mapping property for the current series object.\r\n    */\r\n    yMemberPath: string;\r\n    /**\r\n     * Gets or sets the trend type for the current scatter series.\r\n    */\r\n    trendLineType: TrendLineType;\r\n    /**\r\n     * Gets or sets the brush to use to draw the trend line.\r\n    */\r\n    trendLineBrush: string;\r\n    /**\r\n     * Gets the effective TrendLineBrush for this series.\r\n    */\r\n    actualTrendLineBrush: string;\r\n    /**\r\n     * Gets or sets the thickness of the current scatter series object's trend line.\r\n    */\r\n    trendLineThickness: number;\r\n    /**\r\n     * Gets or sets the moving average period for the current scatter series object.\r\n     * The typical, and initial, value for trend line period is 7.\r\n    */\r\n    trendLinePeriod: number;\r\n    /**\r\n     * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n    */\r\n    markerCollisionAvoidance: CollisionAvoidanceType;\r\n    /**\r\n     * Gets or sets the Z-Index of the trend line.  Values greater than 1000 will result in the trend line being rendered in front of the series data.\r\n    */\r\n    trendLineZIndex: number;\r\n    /**\r\n     * Gets or sets the maximum number of markerItems displayed by the current series.\r\n     * If more than the specified number of markerItems are visible, the series will automatically\r\n     * choose a representative set.\r\n    */\r\n    maximumMarkers: number;\r\n    findByName(name: string): any;\r\n    protected _styling(container: any, component: any, parent?: any): void;\r\n    getItemValue(item: any, memberPathName: string): any;\r\n    /**\r\n     * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\r\n    \r\n    * @param world  * The world coordinates for which to get a value marker bounding box for\r\n    */\r\n    getSeriesValueMarkerBoundingBox(world: IgPoint): IgRect;\r\n    /**\r\n     * Determine if object can be used as YAxis\r\n    \r\n    * @param axis  * The object to check\r\n    */\r\n    canUseAsYAxis(axis: any): boolean;\r\n    /**\r\n     * Determine if object can be used as XAxis\r\n    \r\n    * @param axis  * The object to check\r\n    */\r\n    canUseAsXAxis(axis: any): boolean;\r\n    /**\r\n     * Gets the item that is the best match for the specified world coordinates.\r\n    \r\n    * @param world  * The world coordinates to use.\r\n    */\r\n    getItem(world: IgPoint): any;\r\n    /**\r\n     * Gets the index of the item that resides at the provided world coordinates.\r\n    \r\n    * @param world  * The world coordinates of the requested item.\r\n    */\r\n    getItemIndex(world: IgPoint): number;\r\n    /**\r\n     * Scrolls the series to display the item for the specified data item.\r\n     * The series is scrolled by the minimum amount required to place the specified data item within\r\n     * the central 80% of the visible axis.\r\n    \r\n    * @param item  * The data item (item) to scroll to.\r\n    */\r\n    scrollIntoView(item: any): boolean;\r\n}\r\n"]}
{"version":3,"file":"igx-numeric-radius-axis-component.d.ts","sources":["igx-numeric-radius-axis-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type } from '@angular/core';\r\nimport { IgxNumericAxisBaseComponent } from \"./igx-numeric-axis-base-component\";\r\nimport { IgxAxisComponent } from \"./igx-axis-component\";\r\nimport { NumericRadiusAxis } from \"./NumericRadiusAxis\";\r\n/**\r\n * Represents a IgxDataChartComponent radius axis for polar and radial series.\r\n*\r\n* ```html\r\n* <igx-data-chart\r\n*     [dataSource]=\"dataSource\"   >\r\n*     <igx-category-angle-axis name=\"angleAxis\" label=\"Department\" />\r\n*     <igx-numeric-radius-axis name=\"radiusAxis\" />\r\n*  </igx-data-chart>\r\n* ```\r\n*\r\n* ```ts\r\n* this.series1.angleAxisName = \"AngleAxis\";\r\n* this.series1.valueAxisName = \"numericYAxis\";\r\n* ```\r\n*/\r\nexport declare const IgxNumericRadiusAxisComponent_PROVIDERS: {\r\n    provide: typeof IgxAxisComponent;\r\n    useExisting: Type<any>;\r\n}[];\r\nexport declare class IgxNumericRadiusAxisComponent extends IgxNumericAxisBaseComponent {\r\n    protected createImplementation(): NumericRadiusAxis;\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: NumericRadiusAxis;\r\n    constructor();\r\n    /**\r\n     * Checks if the axis is of radial axis type\r\n    *\r\n    * ```ts\r\n    * let isRadial: boolean = this.series.isRadial;\r\n    * ```\r\n    */\r\n    readonly isRadial: boolean;\r\n    /**\r\n     * Defines the percentage of the maximum radius extent to use as the maximum radius. Should be\r\n     * a value between 0.0 and 1.0.\r\n    */\r\n    radiusExtentScale: number;\r\n    /**\r\n     * Defines the percentage of the maximum radius extent to leave blank at the center of the chart. Should be\r\n     * a value between 0.0 and 1.0.\r\n    */\r\n    innerRadiusExtentScale: number;\r\n    /**\r\n     * Returns a world coordinates radius length (0 - 0.5) from a raw axis value.\r\n    \r\n    * @param unscaledValue  * The raw axis value.\r\n    */\r\n    getScaledValue(unscaledValue: number): number;\r\n    /**\r\n     * Returns a raw axis value from the world coordinates radius length provided.\r\n    \r\n    * @param scaledValue  * The scaled world coordinates radius length.\r\n    *\r\n    * Class containing several properties which are used as parameters passed to scaling operations in a `IgxSeriesViewerComponent`.\r\n    */\r\n    getUnscaledValue(scaledValue: number): number;\r\n}\r\n"]}
{"version":3,"file":"igx-horizontal-stacked-series-base-component.d.ts","sources":["igx-horizontal-stacked-series-base-component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Type } from '@angular/core';\r\nimport { IgxCategoryAxisBaseComponent } from \"./igx-category-axis-base-component\";\r\nimport { IgxNumericYAxisComponent } from \"./igx-numeric-y-axis-component\";\r\nimport { IgxStackedSeriesBaseComponent } from \"./igx-stacked-series-base-component\";\r\nimport { IgxMarkerSeriesComponent } from \"./igx-marker-series-component\";\r\nimport { IgxSeriesComponent } from \"./igx-series-component\";\r\nimport { HorizontalStackedSeriesBase } from \"./HorizontalStackedSeriesBase\";\r\n/**\r\n * Base class for stacked series with a category x-axis and a numeric y-axis.\r\n*/\r\nexport declare const IgxHorizontalStackedSeriesBaseComponent_PROVIDERS: ({\r\n    provide: typeof IgxMarkerSeriesComponent;\r\n    useExisting: Type<any>;\r\n} | {\r\n    provide: typeof IgxSeriesComponent;\r\n    useExisting: Type<any>;\r\n})[];\r\nexport declare abstract class IgxHorizontalStackedSeriesBaseComponent extends IgxStackedSeriesBaseComponent {\r\n    /**\r\n                                 * @hidden\r\n                                 */\r\n    readonly i: HorizontalStackedSeriesBase;\r\n    constructor();\r\n    /**\r\n     * Gets or sets the effective x-axis for this series.\r\n    */\r\n    xAxis: IgxCategoryAxisBaseComponent;\r\n    /**\r\n     * Gets or sets the effective y-axis for this series.\r\n    */\r\n    yAxis: IgxNumericYAxisComponent;\r\n    findByName(name: string): any;\r\n    protected _styling(container: any, component: any, parent?: any): void;\r\n    /**\r\n     * Returns the offset value for this series if grouped on a category axis.\r\n    \r\n    */\r\n    getOffsetValue(): number;\r\n    /**\r\n     * Returns the width of the category grouping this series is in.\r\n    \r\n    */\r\n    getCategoryWidth(): number;\r\n    /**\r\n     * Determine if object can be used as YAxis\r\n    \r\n    * @param axis  * The object to check\r\n    */\r\n    canUseAsYAxis(axis: any): boolean;\r\n    /**\r\n     * Determine if object can be used as XAxis\r\n    \r\n    * @param axis  * The object to check\r\n    */\r\n    canUseAsXAxis(axis: any): boolean;\r\n}\r\n"]}